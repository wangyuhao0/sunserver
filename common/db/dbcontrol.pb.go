// Code generated by protoc-gen-go. DO NOT EDIT.
// source: db/dbcontrol.proto

package db

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//如果包含Insert+Update，如果存在由更新
type OptType int32

const (
	OptType_None        OptType = 0
	OptType_Find        OptType = 1
	OptType_Insert      OptType = 2
	OptType_Update      OptType = 4
	OptType_Del         OptType = 8
	OptType_Upset       OptType = 16
	OptType_SetOnInsert OptType = 32
)

var OptType_name = map[int32]string{
	0:  "None",
	1:  "Find",
	2:  "Insert",
	4:  "Update",
	8:  "Del",
	16: "Upset",
	32: "SetOnInsert",
}

var OptType_value = map[string]int32{
	"None":        0,
	"Find":        1,
	"Insert":      2,
	"Update":      4,
	"Del":         8,
	"Upset":       16,
	"SetOnInsert": 32,
}

func (x OptType) String() string {
	return proto.EnumName(OptType_name, int32(x))
}

func (OptType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76617f85795d505c, []int{0}
}

type DBControllerReq struct {
	Type                 OptType  `protobuf:"varint,1,opt,name=type,proto3,enum=db.OptType" json:"type,omitempty"`
	Key                  uint64   `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	CollectName          string   `protobuf:"bytes,3,opt,name=collectName,proto3" json:"collectName,omitempty"`
	Condition            []byte   `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`
	SelectField          []byte   `protobuf:"bytes,5,opt,name=selectField,proto3" json:"selectField,omitempty"`
	MaxRow               int32    `protobuf:"varint,6,opt,name=maxRow,proto3" json:"maxRow,omitempty"`
	Sort                 string   `protobuf:"bytes,7,opt,name=sort,proto3" json:"sort,omitempty"`
	Data                 [][]byte `protobuf:"bytes,8,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DBControllerReq) Reset()         { *m = DBControllerReq{} }
func (m *DBControllerReq) String() string { return proto.CompactTextString(m) }
func (*DBControllerReq) ProtoMessage()    {}
func (*DBControllerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76617f85795d505c, []int{0}
}

func (m *DBControllerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DBControllerReq.Unmarshal(m, b)
}
func (m *DBControllerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DBControllerReq.Marshal(b, m, deterministic)
}
func (m *DBControllerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DBControllerReq.Merge(m, src)
}
func (m *DBControllerReq) XXX_Size() int {
	return xxx_messageInfo_DBControllerReq.Size(m)
}
func (m *DBControllerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DBControllerReq.DiscardUnknown(m)
}

var xxx_messageInfo_DBControllerReq proto.InternalMessageInfo

func (m *DBControllerReq) GetType() OptType {
	if m != nil {
		return m.Type
	}
	return OptType_None
}

func (m *DBControllerReq) GetKey() uint64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *DBControllerReq) GetCollectName() string {
	if m != nil {
		return m.CollectName
	}
	return ""
}

func (m *DBControllerReq) GetCondition() []byte {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *DBControllerReq) GetSelectField() []byte {
	if m != nil {
		return m.SelectField
	}
	return nil
}

func (m *DBControllerReq) GetMaxRow() int32 {
	if m != nil {
		return m.MaxRow
	}
	return 0
}

func (m *DBControllerReq) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *DBControllerReq) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type DBControllerRet struct {
	Type                 OptType  `protobuf:"varint,1,opt,name=type,proto3,enum=db.OptType" json:"type,omitempty"`
	Res                  [][]byte `protobuf:"bytes,2,rep,name=res,proto3" json:"res,omitempty"`
	RowNum               int32    `protobuf:"varint,3,opt,name=rowNum,proto3" json:"rowNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DBControllerRet) Reset()         { *m = DBControllerRet{} }
func (m *DBControllerRet) String() string { return proto.CompactTextString(m) }
func (*DBControllerRet) ProtoMessage()    {}
func (*DBControllerRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_76617f85795d505c, []int{1}
}

func (m *DBControllerRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DBControllerRet.Unmarshal(m, b)
}
func (m *DBControllerRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DBControllerRet.Marshal(b, m, deterministic)
}
func (m *DBControllerRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DBControllerRet.Merge(m, src)
}
func (m *DBControllerRet) XXX_Size() int {
	return xxx_messageInfo_DBControllerRet.Size(m)
}
func (m *DBControllerRet) XXX_DiscardUnknown() {
	xxx_messageInfo_DBControllerRet.DiscardUnknown(m)
}

var xxx_messageInfo_DBControllerRet proto.InternalMessageInfo

func (m *DBControllerRet) GetType() OptType {
	if m != nil {
		return m.Type
	}
	return OptType_None
}

func (m *DBControllerRet) GetRes() [][]byte {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *DBControllerRet) GetRowNum() int32 {
	if m != nil {
		return m.RowNum
	}
	return 0
}

type MysqlControllerReq struct {
	Type                 OptType  `protobuf:"varint,1,opt,name=type,proto3,enum=db.OptType" json:"type,omitempty"`
	Key                  uint64   `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	TableName            string   `protobuf:"bytes,3,opt,name=tableName,proto3" json:"tableName,omitempty"`
	ResultJson           string   `protobuf:"bytes,4,opt,name=resultJson,proto3" json:"resultJson,omitempty"`
	Sql                  string   `protobuf:"bytes,5,opt,name=sql,proto3" json:"sql,omitempty"`
	Args                 []string `protobuf:"bytes,6,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MysqlControllerReq) Reset()         { *m = MysqlControllerReq{} }
func (m *MysqlControllerReq) String() string { return proto.CompactTextString(m) }
func (*MysqlControllerReq) ProtoMessage()    {}
func (*MysqlControllerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76617f85795d505c, []int{2}
}

func (m *MysqlControllerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlControllerReq.Unmarshal(m, b)
}
func (m *MysqlControllerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlControllerReq.Marshal(b, m, deterministic)
}
func (m *MysqlControllerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlControllerReq.Merge(m, src)
}
func (m *MysqlControllerReq) XXX_Size() int {
	return xxx_messageInfo_MysqlControllerReq.Size(m)
}
func (m *MysqlControllerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlControllerReq.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlControllerReq proto.InternalMessageInfo

func (m *MysqlControllerReq) GetType() OptType {
	if m != nil {
		return m.Type
	}
	return OptType_None
}

func (m *MysqlControllerReq) GetKey() uint64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *MysqlControllerReq) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *MysqlControllerReq) GetResultJson() string {
	if m != nil {
		return m.ResultJson
	}
	return ""
}

func (m *MysqlControllerReq) GetSql() string {
	if m != nil {
		return m.Sql
	}
	return ""
}

func (m *MysqlControllerReq) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type MysqlControllerRet struct {
	Type                 OptType  `protobuf:"varint,1,opt,name=type,proto3,enum=db.OptType" json:"type,omitempty"`
	Res                  [][]byte `protobuf:"bytes,2,rep,name=res,proto3" json:"res,omitempty"`
	RowNum               int32    `protobuf:"varint,3,opt,name=rowNum,proto3" json:"rowNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MysqlControllerRet) Reset()         { *m = MysqlControllerRet{} }
func (m *MysqlControllerRet) String() string { return proto.CompactTextString(m) }
func (*MysqlControllerRet) ProtoMessage()    {}
func (*MysqlControllerRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_76617f85795d505c, []int{3}
}

func (m *MysqlControllerRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlControllerRet.Unmarshal(m, b)
}
func (m *MysqlControllerRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlControllerRet.Marshal(b, m, deterministic)
}
func (m *MysqlControllerRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlControllerRet.Merge(m, src)
}
func (m *MysqlControllerRet) XXX_Size() int {
	return xxx_messageInfo_MysqlControllerRet.Size(m)
}
func (m *MysqlControllerRet) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlControllerRet.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlControllerRet proto.InternalMessageInfo

func (m *MysqlControllerRet) GetType() OptType {
	if m != nil {
		return m.Type
	}
	return OptType_None
}

func (m *MysqlControllerRet) GetRes() [][]byte {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *MysqlControllerRet) GetRowNum() int32 {
	if m != nil {
		return m.RowNum
	}
	return 0
}

type RedisControllerReq struct {
	Type                 OptType  `protobuf:"varint,1,opt,name=type,proto3,enum=db.OptType" json:"type,omitempty"`
	Key                  uint64   `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	RKey                 string   `protobuf:"bytes,3,opt,name=rKey,proto3" json:"rKey,omitempty"`
	RValue               string   `protobuf:"bytes,4,opt,name=rValue,proto3" json:"rValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedisControllerReq) Reset()         { *m = RedisControllerReq{} }
func (m *RedisControllerReq) String() string { return proto.CompactTextString(m) }
func (*RedisControllerReq) ProtoMessage()    {}
func (*RedisControllerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76617f85795d505c, []int{4}
}

func (m *RedisControllerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedisControllerReq.Unmarshal(m, b)
}
func (m *RedisControllerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedisControllerReq.Marshal(b, m, deterministic)
}
func (m *RedisControllerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedisControllerReq.Merge(m, src)
}
func (m *RedisControllerReq) XXX_Size() int {
	return xxx_messageInfo_RedisControllerReq.Size(m)
}
func (m *RedisControllerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RedisControllerReq.DiscardUnknown(m)
}

var xxx_messageInfo_RedisControllerReq proto.InternalMessageInfo

func (m *RedisControllerReq) GetType() OptType {
	if m != nil {
		return m.Type
	}
	return OptType_None
}

func (m *RedisControllerReq) GetKey() uint64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *RedisControllerReq) GetRKey() string {
	if m != nil {
		return m.RKey
	}
	return ""
}

func (m *RedisControllerReq) GetRValue() string {
	if m != nil {
		return m.RValue
	}
	return ""
}

type RedisControllerRet struct {
	Type                 OptType  `protobuf:"varint,1,opt,name=type,proto3,enum=db.OptType" json:"type,omitempty"`
	Res                  []byte   `protobuf:"bytes,2,opt,name=res,proto3" json:"res,omitempty"`
	RowNum               int32    `protobuf:"varint,3,opt,name=rowNum,proto3" json:"rowNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedisControllerRet) Reset()         { *m = RedisControllerRet{} }
func (m *RedisControllerRet) String() string { return proto.CompactTextString(m) }
func (*RedisControllerRet) ProtoMessage()    {}
func (*RedisControllerRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_76617f85795d505c, []int{5}
}

func (m *RedisControllerRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedisControllerRet.Unmarshal(m, b)
}
func (m *RedisControllerRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedisControllerRet.Marshal(b, m, deterministic)
}
func (m *RedisControllerRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedisControllerRet.Merge(m, src)
}
func (m *RedisControllerRet) XXX_Size() int {
	return xxx_messageInfo_RedisControllerRet.Size(m)
}
func (m *RedisControllerRet) XXX_DiscardUnknown() {
	xxx_messageInfo_RedisControllerRet.DiscardUnknown(m)
}

var xxx_messageInfo_RedisControllerRet proto.InternalMessageInfo

func (m *RedisControllerRet) GetType() OptType {
	if m != nil {
		return m.Type
	}
	return OptType_None
}

func (m *RedisControllerRet) GetRes() []byte {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *RedisControllerRet) GetRowNum() int32 {
	if m != nil {
		return m.RowNum
	}
	return 0
}

func init() {
	proto.RegisterEnum("db.OptType", OptType_name, OptType_value)
	proto.RegisterType((*DBControllerReq)(nil), "db.DBControllerReq")
	proto.RegisterType((*DBControllerRet)(nil), "db.DBControllerRet")
	proto.RegisterType((*MysqlControllerReq)(nil), "db.MysqlControllerReq")
	proto.RegisterType((*MysqlControllerRet)(nil), "db.MysqlControllerRet")
	proto.RegisterType((*RedisControllerReq)(nil), "db.RedisControllerReq")
	proto.RegisterType((*RedisControllerRet)(nil), "db.RedisControllerRet")
}

func init() { proto.RegisterFile("db/dbcontrol.proto", fileDescriptor_76617f85795d505c) }

var fileDescriptor_76617f85795d505c = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xc1, 0x8b, 0x13, 0x31,
	0x14, 0xc6, 0x4d, 0x67, 0x3a, 0xed, 0xbc, 0x2e, 0xee, 0xf0, 0x0e, 0x92, 0xc3, 0xa2, 0xa1, 0xa7,
	0xc1, 0x43, 0x05, 0x3d, 0x7a, 0x5b, 0x97, 0x05, 0x15, 0xbb, 0x10, 0x5d, 0x0f, 0x8b, 0x20, 0x33,
	0xcd, 0x43, 0x06, 0xd3, 0xc9, 0x34, 0x49, 0x59, 0xe7, 0x6f, 0xf2, 0xff, 0xf2, 0xef, 0x90, 0xc4,
	0xc0, 0x16, 0x15, 0x54, 0xea, 0xed, 0x7b, 0x5f, 0xe6, 0xcb, 0xcb, 0xf7, 0x83, 0x01, 0x54, 0xed,
	0x13, 0xd5, 0x6e, 0x4c, 0xef, 0xad, 0xd1, 0xab, 0xc1, 0x1a, 0x6f, 0x70, 0xa2, 0xda, 0xe5, 0x37,
	0x06, 0xa7, 0x17, 0xe7, 0x2f, 0x7e, 0xf8, 0x9a, 0xac, 0xa4, 0x1d, 0x3e, 0x82, 0xdc, 0x8f, 0x03,
	0x71, 0x26, 0x58, 0x7d, 0xff, 0xe9, 0x62, 0xa5, 0xda, 0xd5, 0xd5, 0xe0, 0xdf, 0x8d, 0x03, 0xc9,
	0x78, 0x80, 0x15, 0x64, 0x9f, 0x69, 0xe4, 0x13, 0xc1, 0xea, 0x5c, 0x06, 0x89, 0x02, 0x16, 0x9b,
	0x90, 0xdf, 0xf8, 0x75, 0xb3, 0x25, 0x9e, 0x09, 0x56, 0x97, 0xf2, 0xd0, 0xc2, 0x33, 0x28, 0x37,
	0xa6, 0x57, 0x9d, 0xef, 0x4c, 0xcf, 0x73, 0xc1, 0xea, 0x13, 0x79, 0x67, 0x84, 0xbc, 0xa3, 0xf0,
	0xed, 0x65, 0x47, 0x5a, 0xf1, 0x69, 0x3c, 0x3f, 0xb4, 0xf0, 0x01, 0x14, 0xdb, 0xe6, 0x8b, 0x34,
	0xb7, 0xbc, 0x10, 0xac, 0x9e, 0xca, 0x34, 0x21, 0x42, 0xee, 0x8c, 0xf5, 0x7c, 0x16, 0x57, 0x46,
	0x1d, 0x3c, 0xd5, 0xf8, 0x86, 0xcf, 0x45, 0x56, 0x9f, 0xc8, 0xa8, 0x97, 0x1f, 0x7e, 0xee, 0xe9,
	0xff, 0xaa, 0xa7, 0x25, 0xc7, 0x27, 0xf1, 0x9a, 0x20, 0xc3, 0x2b, 0xac, 0xb9, 0x5d, 0xef, 0xb7,
	0xb1, 0xe2, 0x54, 0xa6, 0x69, 0xf9, 0x95, 0x01, 0xbe, 0x19, 0xdd, 0x4e, 0x1f, 0x4d, 0xf2, 0x0c,
	0x4a, 0xdf, 0xb4, 0x9a, 0x0e, 0x38, 0xde, 0x19, 0xf8, 0x10, 0xc0, 0x92, 0xdb, 0x6b, 0xff, 0xca,
	0x25, 0x8c, 0xa5, 0x3c, 0x70, 0xc2, 0x7d, 0x6e, 0xa7, 0x23, 0xbf, 0x52, 0x06, 0x19, 0x58, 0x34,
	0xf6, 0x93, 0xe3, 0x85, 0xc8, 0x02, 0x9f, 0xa0, 0x97, 0x1f, 0x7f, 0xf3, 0xd8, 0xff, 0x8a, 0xc3,
	0x01, 0x4a, 0x52, 0x9d, 0x3b, 0x9a, 0x06, 0x42, 0x6e, 0x5f, 0xd3, 0x98, 0x40, 0x44, 0x1d, 0x97,
	0xbe, 0x6f, 0xf4, 0x9e, 0x52, 0xff, 0x34, 0x85, 0x56, 0xbf, 0x2c, 0xfd, 0x97, 0x56, 0xec, 0x0f,
	0xad, 0x1e, 0xdf, 0xc0, 0x2c, 0x45, 0x71, 0x0e, 0xf9, 0xda, 0xf4, 0x54, 0xdd, 0x0b, 0xea, 0xb2,
	0xeb, 0x55, 0xc5, 0x10, 0xa0, 0x78, 0xd9, 0x3b, 0xb2, 0xbe, 0x9a, 0x04, 0x7d, 0x3d, 0xa8, 0xc6,
	0x53, 0x95, 0xe3, 0x0c, 0xb2, 0x0b, 0xd2, 0xd5, 0x1c, 0x4b, 0x98, 0x5e, 0x0f, 0x8e, 0x7c, 0x55,
	0xe1, 0x29, 0x2c, 0xde, 0x92, 0xbf, 0xea, 0x53, 0x40, 0x9c, 0x17, 0x37, 0xf9, 0xea, 0xb9, 0x6a,
	0xdb, 0x22, 0xfe, 0x9a, 0xcf, 0xbe, 0x07, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x6d, 0xcf, 0x8d, 0xb0,
	0x03, 0x00, 0x00,
}
