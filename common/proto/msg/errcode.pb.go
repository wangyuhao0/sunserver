// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/msgproto/errcode.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrCode int32

const (
	ErrCode_OK                    ErrCode = 0
	ErrCode_InterNalError         ErrCode = 1
	ErrCode_TokenError            ErrCode = 2
	ErrCode_ConnExceeded          ErrCode = 3
	ErrCode_RepeatLoginReq        ErrCode = 4
	ErrCode_PlatTypeError         ErrCode = 5
	ErrCode_PlatIdError           ErrCode = 6
	ErrCode_NotLoginPlayerService ErrCode = 7
	ErrCode_RoomIdNotExist        ErrCode = 8
	ErrCode_NeedReMatch           ErrCode = 9
	ErrCode_TableIdNotExist       ErrCode = 10
	ErrCode_NotOwner              ErrCode = 11
	ErrCode_TableIsEnough         ErrCode = 12
	ErrCode_HaveClientRefuse      ErrCode = 13
)

var ErrCode_name = map[int32]string{
	0:  "OK",
	1:  "InterNalError",
	2:  "TokenError",
	3:  "ConnExceeded",
	4:  "RepeatLoginReq",
	5:  "PlatTypeError",
	6:  "PlatIdError",
	7:  "NotLoginPlayerService",
	8:  "RoomIdNotExist",
	9:  "NeedReMatch",
	10: "TableIdNotExist",
	11: "NotOwner",
	12: "TableIsEnough",
	13: "HaveClientRefuse",
}

var ErrCode_value = map[string]int32{
	"OK":                    0,
	"InterNalError":         1,
	"TokenError":            2,
	"ConnExceeded":          3,
	"RepeatLoginReq":        4,
	"PlatTypeError":         5,
	"PlatIdError":           6,
	"NotLoginPlayerService": 7,
	"RoomIdNotExist":        8,
	"NeedReMatch":           9,
	"TableIdNotExist":       10,
	"NotOwner":              11,
	"TableIsEnough":         12,
	"HaveClientRefuse":      13,
}

func (x ErrCode) String() string {
	return proto.EnumName(ErrCode_name, int32(x))
}

func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_86bbb6c867fc3bd3, []int{0}
}

func init() {
	proto.RegisterEnum("msg.ErrCode", ErrCode_name, ErrCode_value)
}

func init() { proto.RegisterFile("proto/msgproto/errcode.proto", fileDescriptor_86bbb6c867fc3bd3) }

var fileDescriptor_86bbb6c867fc3bd3 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xbd, 0x4e, 0xc3, 0x40,
	0x10, 0x84, 0x21, 0x21, 0x3f, 0x6c, 0xfe, 0x8e, 0x03, 0x0a, 0x24, 0x9e, 0x80, 0x22, 0x14, 0x94,
	0x74, 0x44, 0x96, 0x88, 0x00, 0x27, 0x32, 0xa9, 0xe8, 0x2e, 0xbe, 0xc1, 0xb1, 0xb0, 0x6f, 0xc3,
	0xfa, 0x12, 0x92, 0x57, 0xe0, 0xa9, 0x91, 0x7d, 0x0d, 0xdd, 0xce, 0x68, 0xbe, 0xd1, 0x6a, 0xe8,
	0x76, 0x2b, 0xec, 0xf9, 0xbe, 0xac, 0xb2, 0x70, 0x40, 0x24, 0x65, 0x8b, 0x69, 0xa3, 0x74, 0xbb,
	0xac, 0xb2, 0xbb, 0xdf, 0x16, 0xf5, 0x22, 0x91, 0x19, 0x5b, 0xe8, 0x2e, 0xb5, 0x16, 0x2f, 0xea,
	0x44, 0x5f, 0xd0, 0x68, 0xee, 0x3c, 0x24, 0x36, 0x45, 0x24, 0xc2, 0xa2, 0x4e, 0xf5, 0x98, 0x68,
	0xc5, 0x5f, 0x70, 0x41, 0xb7, 0xb4, 0xa2, 0xe1, 0x8c, 0x9d, 0x8b, 0x0e, 0x29, 0x60, 0x61, 0x55,
	0x5b, 0x6b, 0x1a, 0x27, 0xd8, 0xc2, 0xf8, 0x57, 0xce, 0x72, 0x97, 0xe0, 0x5b, 0x9d, 0xd5, 0x45,
	0xcb, 0xc2, 0xf8, 0xd5, 0x71, 0x8b, 0x00, 0x76, 0xf4, 0x84, 0x06, 0xb5, 0x35, 0xb7, 0xc1, 0xe8,
	0xea, 0x1b, 0xba, 0x8e, 0x39, 0x40, 0xcb, 0xc2, 0x1c, 0x21, 0xef, 0x90, 0x7d, 0x9e, 0x42, 0xf5,
	0x9a, 0x4a, 0xe6, 0x72, 0x6e, 0x63, 0xf6, 0xd1, 0x21, 0xaf, 0xbc, 0xea, 0xd7, 0x7c, 0x0c, 0xd8,
	0x04, 0x6f, 0xc6, 0xa7, 0x1b, 0x75, 0xae, 0x2f, 0x69, 0xb2, 0x32, 0xeb, 0x02, 0xff, 0x52, 0xa4,
	0x87, 0xd4, 0x8f, 0xd9, 0x2f, 0x7e, 0x1c, 0x44, 0x0d, 0xea, 0x37, 0x42, 0xa4, 0x8a, 0x1c, 0xef,
	0xb2, 0x8d, 0x1a, 0xea, 0x2b, 0x52, 0xcf, 0x66, 0x8f, 0x59, 0x91, 0xc3, 0xf9, 0x04, 0x9f, 0xbb,
	0x0a, 0x6a, 0xf4, 0xd4, 0xfb, 0xe8, 0x4c, 0x1f, 0xcb, 0x2a, 0x5b, 0x77, 0x9b, 0x85, 0x1e, 0xfe,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x93, 0xae, 0x44, 0x95, 0x41, 0x01, 0x00, 0x00,
}
