// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/msgproto/playerinfo.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//用户基本信息
type PlayerInfo struct {
	UserId               uint64   `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Rank                 uint64   `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	NickName             string   `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Sex                  int32    `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	Avatar               string   `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	ClientId             uint64   `protobuf:"varint,6,opt,name=clientId,proto3" json:"clientId,omitempty"`
	IsOwner              bool     `protobuf:"varint,7,opt,name=isOwner,proto3" json:"isOwner,omitempty"`
	SeatNum              int32    `protobuf:"varint,8,opt,name=seatNum,proto3" json:"seatNum,omitempty"`
	IsLogin              int32    `protobuf:"varint,9,opt,name=isLogin,proto3" json:"isLogin,omitempty"`
	LastLoginTime        int64    `protobuf:"varint,10,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerInfo) Reset()         { *m = PlayerInfo{} }
func (m *PlayerInfo) String() string { return proto.CompactTextString(m) }
func (*PlayerInfo) ProtoMessage()    {}
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f81d971039664abd, []int{0}
}

func (m *PlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerInfo.Unmarshal(m, b)
}
func (m *PlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerInfo.Marshal(b, m, deterministic)
}
func (m *PlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerInfo.Merge(m, src)
}
func (m *PlayerInfo) XXX_Size() int {
	return xxx_messageInfo_PlayerInfo.Size(m)
}
func (m *PlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerInfo proto.InternalMessageInfo

func (m *PlayerInfo) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PlayerInfo) GetRank() uint64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *PlayerInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *PlayerInfo) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *PlayerInfo) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *PlayerInfo) GetClientId() uint64 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

func (m *PlayerInfo) GetIsOwner() bool {
	if m != nil {
		return m.IsOwner
	}
	return false
}

func (m *PlayerInfo) GetSeatNum() int32 {
	if m != nil {
		return m.SeatNum
	}
	return 0
}

func (m *PlayerInfo) GetIsLogin() int32 {
	if m != nil {
		return m.IsLogin
	}
	return 0
}

func (m *PlayerInfo) GetLastLoginTime() int64 {
	if m != nil {
		return m.LastLoginTime
	}
	return 0
}

func init() {
	proto.RegisterType((*PlayerInfo)(nil), "msg.PlayerInfo")
}

func init() { proto.RegisterFile("proto/msgproto/playerinfo.proto", fileDescriptor_f81d971039664abd) }

var fileDescriptor_f81d971039664abd = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0x49, 0xf7, 0x6f, 0x07, 0x04, 0xc9, 0x41, 0x06, 0x2f, 0x06, 0xf1, 0x90, 0x53, 0x3d,
	0x78, 0xf4, 0xe6, 0x6d, 0x41, 0xaa, 0x04, 0x4f, 0xde, 0x62, 0x9b, 0x2e, 0xa1, 0x9b, 0xa4, 0x24,
	0xa9, 0x7f, 0xbe, 0x84, 0x9f, 0x59, 0x76, 0x76, 0x5b, 0xf0, 0xf6, 0x7e, 0xef, 0xcd, 0xbc, 0x81,
	0x81, 0x9b, 0x43, 0x0c, 0x39, 0xdc, 0xbb, 0xd4, 0x4f, 0xe2, 0x30, 0xe8, 0x1f, 0x13, 0xad, 0xdf,
	0x85, 0x15, 0x19, 0xbc, 0x70, 0xa9, 0xbf, 0xfd, 0x5d, 0x00, 0xbc, 0x52, 0xd2, 0xf9, 0x5d, 0xe0,
	0x57, 0x50, 0x1f, 0x93, 0x89, 0xdd, 0x16, 0x99, 0x60, 0xb2, 0x54, 0x33, 0x71, 0x0e, 0x65, 0xd4,
	0x7e, 0x8f, 0x0b, 0x72, 0x49, 0xf3, 0x6b, 0x68, 0xbd, 0xdd, 0xec, 0xd7, 0xda, 0x19, 0x2c, 0x04,
	0x93, 0x4b, 0x75, 0x66, 0x7e, 0x09, 0x45, 0x32, 0xdf, 0x58, 0x0a, 0x26, 0x2b, 0x35, 0xca, 0xb1,
	0x59, 0x7f, 0xea, 0xac, 0x23, 0x56, 0x34, 0x3b, 0xd3, 0xd8, 0xb2, 0x19, 0xac, 0xf1, 0xb9, 0xdb,
	0x62, 0x4d, 0xed, 0x67, 0xe6, 0x08, 0x8d, 0x4d, 0x2f, 0x5f, 0xde, 0x44, 0x6c, 0x04, 0x93, 0xad,
	0x3a, 0xe1, 0x98, 0x24, 0xa3, 0xf3, 0xfa, 0xe8, 0xb0, 0xa5, 0x1b, 0x27, 0x9c, 0x76, 0x9e, 0x43,
	0x6f, 0x3d, 0x2e, 0xa7, 0x64, 0x46, 0x7e, 0x07, 0x17, 0x83, 0x4e, 0x99, 0xe0, 0xcd, 0x3a, 0x83,
	0x20, 0x98, 0x2c, 0xd4, 0x7f, 0xf3, 0xa9, 0x79, 0xaf, 0x56, 0x8f, 0x2e, 0xf5, 0x1f, 0x35, 0x7d,
	0xe9, 0xe1, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xc5, 0x07, 0xf3, 0x48, 0x01, 0x00, 0x00,
}
